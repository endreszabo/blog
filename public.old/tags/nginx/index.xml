<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nginx on end.re</title><link>https://end.re/tags/nginx/</link><description>Recent content in Nginx on end.re</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright 2011-2016 Endre Szabo</copyright><lastBuildDate>Mon, 18 Jul 2011 11:00:18 +0000</lastBuildDate><atom:link href="https://end.re/tags/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>Nginx as a general purpose TCP proxy</title><link>https://end.re/2011/07/18/ebp006_nginx-as-a-general-purpose-tcp-proxy/</link><pubDate>Mon, 18 Jul 2011 11:00:18 +0000</pubDate><guid>https://end.re/2011/07/18/ebp006_nginx-as-a-general-purpose-tcp-proxy/</guid><description>Nginx is well known for its powerful HTTP reverse-proxy features. Altough Nginx does its job well in pretty lot of situations, there are always a need for a general TCP proxy stuff. Sadly this feature does not come boundled in with the stock Nginx.
This is where 3rd party patches come in. There are quite some great patches out there, in this post I will write about nginx_tcp_proxy_module made by Weibin Yao from China (he has 13 different promising patches and modules for nginx, definitely worth a check).</description></item><item><title>Nginx Alternative Root With Conditional Autoindexing</title><link>https://end.re/2011/05/02/ebp002_nginx-altroot-with-conditional-autoindex/</link><pubDate>Mon, 02 May 2011 00:00:00 +0000</pubDate><guid>https://end.re/2011/05/02/ebp002_nginx-altroot-with-conditional-autoindex/</guid><description>&lt;p&gt;Recently I have developed the following Nginx setup to make my virtual host instance more advanced. It has the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The blog root directory served from a completely different directory than the regular &lt;code&gt;htdocs&lt;/code&gt; root. Blog content has preference over the other files, so if the requested file is not found in the blog root, it falls back to the regular root.&lt;/li&gt;
&lt;li&gt;There is a feature for conditional autoindexing (I don&amp;rsquo;t like to expse my files by default): if I put a &lt;code&gt;.index&lt;/code&gt; file into a directory, it will be publicly autoindexed, otherwise Nginx returns a 404 error (as instead on the default 403).&lt;/li&gt;
&lt;li&gt;Handles &lt;code&gt;error_page&lt;/code&gt; idoms well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;</description></item></channel></rss>